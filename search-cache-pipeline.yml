#schedules:
#- cron: 0 * * * *
#  displayName: Run every hour
#  branches:
#    include:
#    - /dev/bozturk/new-search-cache-pipeline
#  always: true

pool:
    name: DotNetCore-Windows

steps:
- checkout: self

- script: '$(Build.SourcesDirectory)\build.cmd'

- task: UseDotNet@2
  displayName: 'Use .NET 3.1'
  inputs:
    packageType: sdk
    version: 3.1.x
    installationPath: $(Build.SourcesDirectory)/.dotnet

- task: UseDotNet@2
  displayName: 'Use .NET 5.0.100'
  inputs:
    packageType: sdk
    version: 5.0.100
    installationPath: $(Build.SourcesDirectory)/.dotnet

- task: UseDotNet@2
  displayName: 'Use .NET 5.0.300'
  inputs:
    packageType: sdk
    version: 5.0.300
    installationPath: $(Build.SourcesDirectory)/.dotnet

- powershell: >
    &powershell -NoProfile -ExecutionPolicy unrestricted 
    -Command "&([scriptblock]::Create((Invoke-WebRequest -UseBasicParsing 'https://dot.net/v1/dotnet-install.ps1'))) 
    -Version 6.0.100-rc.2.21420.30
    -InstallDir $(Build.SourcesDirectory)/.dotnet
    -SkipNonVersionedFiles"
  displayName: Install .NET 6.0

- powershell: >
    $(Build.SourcesDirectory)/.dotnet/dotnet.exe $(Build.SourcesDirectory)/artifacts/bin/Microsoft.TemplateSearch.TemplateDiscovery/Debug/net6.0/Microsoft.TemplateSearch.TemplateDiscovery.dll
    --basePath $(System.DefaultWorkingDirectory)/NugetDownloadDirectory --allowPreviewPacks -v -test
  displayName: Run Cache Updater

- task: CopyFiles@2
  inputs:
    sourceFolder: $(System.DefaultWorkingDirectory)/NugetDownloadDirectory/SearchCache/
    contents: 'NuGetTemplateSearchInfo*.json'
    targetFolder: $(System.DefaultWorkingDirectory)/ArtifactsToPublish/

- publish: $(System.DefaultWorkingDirectory)/ArtifactsToPublish/
  artifact: outputs
  displayName: Publish Artifacts

- bash: az config set extension.use_dynamic_install=yes_without_prompt
  displayName: Disable Azure CLI prompts

#- bash: >
#    az storage azcopy blob upload 
#    -c $(CacheFileStorageContainer)
#    --account-name $(CacheFileStorageAccount) 
#    -s '$(System.DefaultWorkingDirectory)/NugetDownloadDirectory/SearchCache/NuGetTemplateSearchInfoVer2.json' 
#    --sas-token "$(CacheFileStorageSasToken)"
#    -d Partners/NuGetTemplateSearchInfoVer2.json
#    | tee upload.log
#    && grep ".*Number of Transfers Completed: 1" upload.log || (echo ; echo "Upload failed"; false)
#  displayName: Upload to blob storage